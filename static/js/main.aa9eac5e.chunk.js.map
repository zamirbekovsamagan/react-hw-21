{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["initialState","firstName","firstNameValidation","lastName","lastNameValidation","emailAddress","emailAddressValidation","reducer","prevState","action","type","test","trim","includes","BasicForm","useReducer","state","dispatch","nameClass","lastnameClass","emailClass","onSubmit","event","preventDefault","className","htmlFor","value","id","onChange","target","onBlur","App","ReactDOM","render","document","getElementById"],"mappings":"uNAEMA,EAAe,CACnBC,UAAW,GACXC,qBAAqB,EACrBC,SAAU,GACVC,oBAAoB,EACpBC,aAAc,GACdC,wBAAwB,GAGpBC,EAAU,SAACC,EAAWC,GAC1B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEP,UAAWQ,EAAOR,YAEtB,IAAK,iBACH,OAAO,2BACFO,GADL,IAEEL,SAAUM,EAAON,WAErB,IAAK,cACH,OAAO,2BACFK,GADL,IAEEH,aAAcI,EAAOJ,eAEzB,IAAK,YACH,OAAO,2BACFG,GADL,IAEEN,oBAAqB,SAASS,KAAKH,EAAUP,aAAe,KAAKU,KAAKH,EAAUP,YAA6C,KAA/BO,EAAUP,UAAUW,SAEtH,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEJ,mBAAoB,SAASO,KAAKH,EAAUL,YAAc,KAAKQ,KAAKH,EAAUL,WAA2C,KAA9BK,EAAUL,SAASS,SAElH,IAAK,aACH,OAAO,2BACFJ,GADL,IAEEF,uBAAwBE,EAAUH,aAAaQ,SAAS,MAA0C,KAAlCL,EAAUH,aAAaO,SAE3F,IAAK,QACH,OAAOZ,EACT,QACE,OAAOQ,IAoFEM,EAhFG,WAChB,MAA0BC,qBAAWR,EAASP,GAA9C,mBAAOgB,EAAP,KAAcC,EAAd,KA0BMC,EAAaF,EAAMd,oBAA+C,eAAzB,uBACzCiB,EAAiBH,EAAMZ,mBAA8C,eAAzB,uBAC5CgB,EAAcJ,EAAMV,uBAAkD,eAAzB,uBAOnD,OACE,uBAAMe,SANc,SAACC,GACrBA,EAAMC,iBACNN,EAAS,CAAEP,KAAM,WAIjB,UACE,sBAAKc,UAAU,gBAAf,UACE,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,wBACA,uBACEC,MAAOV,EAAMf,UACbS,KAAK,OACLiB,GAAG,OACHC,SA1CgB,SAACN,GACzBL,EAAS,CAAEP,KAAM,aAAcT,UAAWqB,EAAMO,OAAOH,SA0C/CI,OA/BY,WACpBb,EAAS,CAAEP,KAAM,kBAgCTM,EAAMd,qBAAuB,0DAA4B,wCAA5B,+BAAsE,uCAAtE,iBAAiG,4CAElI,sBAAKsB,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,uBACA,uBACEC,MAAOV,EAAMb,SACbO,KAAK,OACLiB,GAAG,OACHC,SAjDoB,SAACN,GAC7BL,EAAS,CAAEP,KAAM,iBAAkBP,SAAUmB,EAAMO,OAAOH,SAiDlDI,OAtCgB,WACxBb,EAAS,CAAEP,KAAM,sBAuCTM,EAAMZ,oBAAsB,8DAAgC,wCAAhC,+BAA0E,uCAA1E,iBAAqG,+CAGvI,sBAAKoB,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,OAAf,4BACA,uBACEC,MAAOV,EAAMX,aACbK,KAAK,OACLiB,GAAG,OACHC,SAzDmB,SAACN,GAC1BL,EAAS,CAAEP,KAAM,cAAeL,aAAciB,EAAMO,OAAOH,SAyDrDI,OA9Ce,WACrBb,EAAS,CAAEP,KAAM,mBA+CXM,EAAMV,wBAA0B,oDAAsB,kCAAtB,iBAA4C,4CAEhF,qBAAKkB,UAAU,eAAf,SACE,kDChHOO,MATf,WACE,OACE,qBAAKP,UAAU,MAAf,SAEE,cAAC,EAAD,OCHNQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aa9eac5e.chunk.js","sourcesContent":["import { useReducer } from \"react\";\n\nconst initialState = {\n  firstName: '',\n  firstNameValidation: true,\n  lastName: '',\n  lastNameValidation: true,\n  emailAddress: '',\n  emailAddressValidation: true\n}\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case 'NAME_INPUT':\n      return {\n        ...prevState,\n        firstName: action.firstName\n      }\n    case 'LASTNAME_INPUT':\n      return {\n        ...prevState,\n        lastName: action.lastName\n      }\n    case 'EMAIL_INPUT':\n      return {\n        ...prevState,\n        emailAddress: action.emailAddress\n      }\n    case 'NAME_BLUR':\n      return {\n        ...prevState,\n        firstNameValidation: /^[A-Z]/.test(prevState.firstName) && !/\\d/.test(prevState.firstName) && prevState.firstName.trim() !== ''\n      }\n    case 'LASTNAME_BLUR':\n      return {\n        ...prevState,\n        lastNameValidation: /^[A-Z]/.test(prevState.lastName) && !/\\d/.test(prevState.lastName) && prevState.lastName.trim() !== ''\n      }\n    case 'EMAIL_BLUR':\n      return {\n        ...prevState,\n        emailAddressValidation: prevState.emailAddress.includes('@') && prevState.emailAddress.trim() !== ''\n      }\n    case 'CLEAR':\n      return initialState\n    default:\n      return prevState\n  }\n}\n\nconst BasicForm = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const nameChangeHandler = (event) => {\n    dispatch({ type: 'NAME_INPUT', firstName: event.target.value })\n  }\n\n  const lastNameChangeHandler = (event) => {\n    dispatch({ type: 'LASTNAME_INPUT', lastName: event.target.value })\n  }\n\n  const emailChangeHandler = (event) => {\n    dispatch({ type: 'EMAIL_INPUT', emailAddress: event.target.value })\n  }\n\n  const inputNameBlur = () => {\n    dispatch({ type: 'NAME_BLUR' })\n  }\n\n  const inputLastnameBlur = () => {\n    dispatch({ type: 'LASTNAME_BLUR' })\n  }\n\n  const inputEmailBlur = () => {\n    dispatch({ type: 'EMAIL_BLUR' })\n  }\n\n  const nameClass = !state.firstNameValidation ? 'form-control invalid' : 'form-control'\n  const lastnameClass = !state.lastNameValidation ? 'form-control invalid' : 'form-control'\n  const emailClass = !state.emailAddressValidation ? 'form-control invalid' : 'form-control'\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    dispatch({ type: 'CLEAR' })\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={nameClass}>\n          <label htmlFor='name'>First Name</label>\n          <input\n            value={state.firstName}\n            type='text'\n            id='name'\n            onChange={nameChangeHandler}\n            onBlur={inputNameBlur}\n          />\n          {!state.firstNameValidation && <p>The name must start with <i>capital</i> letter and can't contain a <i>number</i> and can't be <i>empty</i></p>}\n        </div>\n        <div className={lastnameClass}>\n          <label htmlFor='name'>Last Name</label>\n          <input\n            value={state.lastName}\n            type='text'\n            id='name'\n            onChange={lastNameChangeHandler}\n            onBlur={inputLastnameBlur}\n          />\n          {!state.lastNameValidation && <p>The lastname must start with <i>capital</i> letter and can't contain a <i>number</i> and can't be <i>empty</i></p>}\n        </div>\n      </div>\n      <div className={emailClass}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input\n          value={state.emailAddress}\n          type='text'\n          id='name'\n          onChange={emailChangeHandler}\n          onBlur={inputEmailBlur}\n        />\n        {!state.emailAddressValidation && <p>Email must include <i>@</i> and can't be <i>empty</i></p>}\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n// import SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <SimpleInput /> */}\n      <BasicForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}